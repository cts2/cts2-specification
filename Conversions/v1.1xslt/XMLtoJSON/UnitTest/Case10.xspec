<?xml version="1.0" encoding="UTF-8"?>
<x:description  xmlns:x = "http://www.jenitennison.com/xslt/xspec" 
    stylesheet="../XMLToJson.xsl">
    <!-- Note: the xspec process doesn't dispatch with the first node as the root, meaning that
        the "xsl:template match="/" doesn't work.  All the tests below are assumed to be embedded
        in '{' ... '}'
        -->
    <x:scenario label="Rule 10: All namespaces are removed except xsi">
        <x:context>
            <root xmlns:xhtml="http://www.w3.org/1999/xhtml">
                <xhtml:body> data </xhtml:body>
                <item xhtml:att="abc"/>
            </root>
        </x:context>
        <x:expect label="All namespaces removed">"root": { "body": " data ", "item": { "att": "abc" } }</x:expect>
    </x:scenario>
    <x:scenario label="Rule 10: All namespaces are removed except xsi">
        <x:context>
            <root xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                <xhtml:body> data </xhtml:body>
                <item xhtml:att="abc" xsi:nill="true"/>
            </root>
        </x:context>
        <x:expect label="xsi namespace remains">"root": { "body": " data ", "item": { "att": "abc", "xsi:nill": "true" } }</x:expect>
    </x:scenario>
    <x:scenario label="Rule 10: xsi is always xsl">
        <x:context>
            <root xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi2="http://www.w3.org/2001/XMLSchema-instance">
                <xhtml:body> data </xhtml:body>
                <item xhtml:att="abc" xsi2:nill="true"/>
            </root>
        </x:context>
        <x:expect label="xsi2 is now xsi">"root": { "body": " data ", "item": { "att": "abc", "xsi:nill": "true" } }</x:expect>
    </x:scenario>
    
</x:description>