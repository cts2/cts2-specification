<?xml version="1.0" encoding="UTF-8"?>
<x:description  xmlns:x = "http://www.jenitennison.com/xslt/xspec" 
    stylesheet="../XMLToJson.xsl">
    <!-- Note: the xspec process doesn't dispatch with the first node as the root, meaning that
        the "xsl:template match="/" doesn't work.  All the tests below are assumed to be embedded
        in '{' ... '}'
        -->
    <x:scenario label="Rule 7: If more than one sibling element has the same name, all siblings become an array.">
        <x:context>
            <root> 
                <item>1</item> 
                <item>TRUE</item>           
                <item>data 3</item>
                <item>data 4</item>
            </root>
        </x:context>
        <x:expect label="List of 4 elements">"root": { "item": ["1", "TRUE", "data 3", "data 4"] }</x:expect>
    </x:scenario>
    <x:scenario label="Rule 7: Order will be preserved within the JSONArray but not in dictionaries">
        <x:context>
            <root> 
                <item>1</item> 
                <item>True</item>
                <a/>
                <item>data 3</item>
                <item>data 4</item>
            </root>
        </x:context>
        <x:expect label="Element at the front or the end">"root": { "item": ["1", "True", "data 3", "data 4"], "a": "" }</x:expect>
    </x:scenario>
    <x:scenario label="Rule 7: Order will be preserved within the JSONArray but not in dictionaries">
        <x:context>
            <root> 
                <item>1</item> 
                <item>True</item>
                <a att1="a1"/>
                <item>data 3</item>
                <item>data 4</item>
            </root>
        </x:context>
        <x:expect label="Element at the front or the end with attributes">"root": { "item": ["1", "True", "data 3", "data 4"], "a": { "att1": "a1" } }</x:expect>
    </x:scenario>
    <x:scenario label="Rule 7: If more than one sibling element has the same name, all siblings become an array.">
        <x:context>
            <root>
                <item1/>
                <item2>1</item2> 
                <item2>2</item2>
                <item3/>
                <item4>3</item4>
                <item4>4</item4>
                <item5/>
            </root>
        </x:context>
        <x:expect label="Single, list, single, list">"root": { "item1": "", "item2": ["1", "2"], "item3": "", "item4": ["3", "4"], "item5": "" }</x:expect>
    </x:scenario>
    <x:scenario label="Rule 7: If more than one sibling element has the same name, all siblings become an array.">
        <x:context>
            <root>
                <item1>Text</item1>
                <item2>1</item2> 
                <item2 att2="a2">2</item2>
                <item3><b>Bold</b> text.</item3>
                <item4><i>Italic</i> 3</item4>
                <item4 _CDATA="true" att4="a4"><i>Italic</i>4</item4>
                <item5 _CDATA="true"><b>Bold</b> text.</item5>
            </root>
        </x:context>
        <x:expect label="Single, list, single, list">"root": { "item1": "Text", "item2": ["1", { "att2": "a2", "_content": "2" }], "item3": [{ "b": "Bold" }, " text."], "item4": [[{ "i": "Italic" }, " 3"], { "att4": "a4", "_content": "&lt;i>Italic&lt;/i>4" }], "item5": "&lt;b>Bold&lt;/b> text." }</x:expect>
    </x:scenario>
    
</x:description>