<?xml version="1.0"?>
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
xmlns:baseReadService="http://www.omg.org/spec/CTS2/1.1/wsdl/BaseReadServices"
xmlns:tns="http://www.omg.org/spec/CTS2/1.1/wsdl/ConceptDomainBindingReadServices"
xmlns:baseServiceTypes="http://www.omg.org/spec/CTS2/1.1/wsdl/BaseServiceTypes"
xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
name="ConceptDomainBindingReadService"
targetNamespace="http://www.omg.org/spec/CTS2/1.1/wsdl/ConceptDomainBindingReadServices">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://www.omg.org/spec/CTS2/1.1/wsdl/ConceptDomainBindingReadServices"
      schemaLocation="ConceptDomainBindingReadServiceTypes.xsd" />
    </xsd:schema>

  </wsdl:types>

  <!-- BaseService Messages -->
  <wsdl:message name="getServiceDescription">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceDescription" />
  </wsdl:message>

  <wsdl:message name="getSupportedFormatResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getSupportedFormatResponse" />
  </wsdl:message>

  <wsdl:message name="getServiceProvider">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceProvider" />
  </wsdl:message>

  <wsdl:message name="getServiceNameResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceNameResponse" />
  </wsdl:message>

  <wsdl:message name="getServiceProviderResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceProviderResponse" />
  </wsdl:message>

  <wsdl:message name="getServiceVersion">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceVersion" />
  </wsdl:message>

  <wsdl:message name="getServiceVersionResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceVersionResponse" />
  </wsdl:message>

  <wsdl:message name="getDefaultFormatResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getDefaultFormatResponse" />
  </wsdl:message>

  <wsdl:message name="getImplementationTypeResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getImplementationTypeResponse" />
  </wsdl:message>

  <wsdl:message name="getSupportedProfileResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getSupportedProfileResponse" />
  </wsdl:message>

  <wsdl:message name="getServiceDescriptionResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceDescriptionResponse" />
  </wsdl:message>

  <wsdl:message name="getImplementationType">
    <wsdl:part name="parameters" element="baseServiceTypes:getImplementationType" />
  </wsdl:message>

  <wsdl:message name="getServiceName">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceName" />
  </wsdl:message>

  <wsdl:message name="getDefaultFormat">
    <wsdl:part name="parameters" element="baseServiceTypes:getDefaultFormat" />
  </wsdl:message>

  <wsdl:message name="getKnownNamespace">
    <wsdl:part name="parameters" element="baseServiceTypes:getKnownNamespace" />
  </wsdl:message>

  <wsdl:message name="getKnownNamespaceResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getKnownNamespaceResponse" />
  </wsdl:message>

  <wsdl:message name="getSupportedFormat">
    <wsdl:part name="parameters" element="baseServiceTypes:getSupportedFormat" />
  </wsdl:message>

  <wsdl:message name="getSupportedProfile">
    <wsdl:part name="parameters" element="baseServiceTypes:getSupportedProfile" />
  </wsdl:message>

  <!-- End BaseService Messages -->
  <wsdl:message name="getSupportedTag">
    <wsdl:part name="parameters" element="tns:getSupportedTag" />
  </wsdl:message>

  <wsdl:message name="getSupportedTagResponse">
    <wsdl:part name="parameters" element="tns:getSupportedTagResponse" />
  </wsdl:message>

  <wsdl:message name="existsURIResponse">
    <wsdl:part name="parameters" element="tns:existsURIResponse" />
  </wsdl:message>

  <wsdl:message name="readByURIResponse">
    <wsdl:part name="parameters" element="tns:readByURIResponse" />
  </wsdl:message>

  <wsdl:message name="exists">
    <wsdl:part name="parameters" element="tns:exists" />
  </wsdl:message>

  <wsdl:message name="read">
    <wsdl:part name="parameters" element="tns:read" />
  </wsdl:message>

  <wsdl:message name="existsURI">
    <wsdl:part name="parameters" element="tns:existsURI" />
  </wsdl:message>

  <wsdl:message name="readResponse">
    <wsdl:part name="parameters" element="tns:readResponse" />
  </wsdl:message>

  <wsdl:message name="readByURI">
    <wsdl:part name="parameters" element="tns:readByURI" />
  </wsdl:message>

  <wsdl:message name="existsResponse">
    <wsdl:part name="parameters" element="tns:existsResponse" />
  </wsdl:message>

  <wsdl:portType name="ConceptDomainBindingReadServicePortType">
    <!-- BaseService -->
    <wsdl:operation name="getSupportedFormat">
      <wsdl:input name="getSupportedFormat" message="tns:getSupportedFormat" />
      <wsdl:output name="getSupportedFormatResponse" message="tns:getSupportedFormatResponse" />
    </wsdl:operation>

    <wsdl:operation name="getServiceVersion">
      <wsdl:input name="getServiceVersion" message="tns:getServiceVersion" />
      <wsdl:output name="getServiceVersionResponse" message="tns:getServiceVersionResponse" />
    </wsdl:operation>

    <wsdl:operation name="getDefaultFormat">
      <wsdl:input name="getDefaultFormat" message="tns:getDefaultFormat" />
      <wsdl:output name="getDefaultFormatResponse" message="tns:getDefaultFormatResponse" />
    </wsdl:operation>

    <wsdl:operation name="getKnownNamespace">
      <wsdl:input name="getKnownNamespace" message="tns:getKnownNamespace" />
      <wsdl:output name="getKnownNamespaceResponse" message="tns:getKnownNamespaceResponse" />
    </wsdl:operation>

    <wsdl:operation name="getSupportedProfile">
      <wsdl:input name="getSupportedProfile" message="tns:getSupportedProfile" />
      <wsdl:output name="getSupportedProfileResponse" message="tns:getSupportedProfileResponse" />
    </wsdl:operation>

    <wsdl:operation name="getServiceProvider">
      <wsdl:input name="getServiceProvider" message="tns:getServiceProvider" />
      <wsdl:output name="getServiceProviderResponse" message="tns:getServiceProviderResponse" />
    </wsdl:operation>

    <wsdl:operation name="getServiceName">
      <wsdl:input name="getServiceName" message="tns:getServiceName" />
      <wsdl:output name="getServiceNameResponse" message="tns:getServiceNameResponse" />
    </wsdl:operation>

    <wsdl:operation name="getServiceDescription">
      <wsdl:input name="getServiceDescription" message="tns:getServiceDescription" />
      <wsdl:output name="getServiceDescriptionResponse"
      message="tns:getServiceDescriptionResponse" />
    </wsdl:operation>

    <wsdl:operation name="getImplementationType">
      <wsdl:input name="getImplementationType" message="tns:getImplementationType" />
      <wsdl:output name="getImplementationTypeResponse"
      message="tns:getImplementationTypeResponse" />
    </wsdl:operation>

    <!-- End BaseService -->
    <wsdl:operation name="existsURI">
      <wsdl:input name="existsURI" message="tns:existsURI" />
      <wsdl:output name="existsURIResponse" message="tns:existsURIResponse" />
    </wsdl:operation>

    <wsdl:operation name="getSupportedTag">
      <wsdl:input name="getSupportedTag" message="tns:getSupportedTag" />
      <wsdl:output name="getSupportedTagResponse" message="tns:getSupportedTagResponse" />
    </wsdl:operation>

    <wsdl:operation name="exists">
      <wsdl:input name="exists" message="tns:exists" />
      <wsdl:output name="existsResponse" message="tns:existsResponse" />
    </wsdl:operation>

    <wsdl:operation name="readByURI">
      <wsdl:input name="readByURI" message="tns:readByURI" />
      <wsdl:output name="readByURIResponse" message="tns:readByURIResponse" />
    </wsdl:operation>

    <wsdl:operation name="read">
      <wsdl:input name="read" message="tns:read" />
      <wsdl:output name="readResponse" message="tns:readResponse" />
    </wsdl:operation>

  </wsdl:portType>

  <wsdl:binding name="ConceptDomainBindingReadServiceSoapBinding"
  type="tns:ConceptDomainBindingReadServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />
    <!-- BaseService -->
    <wsdl:operation name="getSupportedFormat">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">alist of the representation formats
      supported by the service. Example: text/html, text/xml, application/json</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getSupportedFormat">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getSupportedFormatResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getServiceVersion">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">the version or release identifier of
      the service</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getServiceVersion">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getServiceVersionResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getDefaultFormat">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">the default format used by the
      service unless otherwise specified</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getDefaultFormat">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getDefaultFormatResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getKnownNamespace">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">the set of namespaces recognized by
      this service. Because many namespace identifiers tend to be cryptic (i.e. HL7 OIDs, BioPortal
      URL's, etc.), &lt;i&gt;knownNamespace&lt;/i&gt; includes the namespace name, an optional URI
      \emph{and} a place to provide textual detail describing what the namespace references. Note
      that namespace names must be unique across an entire CTS2 implementation - the same
      namespace name cannot represent one namespace in code system A and a second in code system B.
      Note also that namespace names are \emph{local} to a service instance. Information that is
      communicated between service instances, recorded in data tables or client software
      \emph{must} use full URIs.</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getKnownNamespace">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getKnownNamespaceResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getServiceProvider">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">a reference to the individual or
      organization that provides the service.</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getServiceProvider">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getServiceProviderResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getSupportedProfile">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">the set of service profiles that are
      supported by this service implementation</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getSupportedProfile">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getSupportedProfileResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getServiceDescription">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">a description of the service, its
      use, etc.</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getServiceDescription">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getServiceDescriptionResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getServiceName">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">a short name that identifies the
      particular service and implementation</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getServiceName">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getServiceNameResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getImplementationType">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">the particular implementation type(s)
      supported by this profile</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getImplementationType">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getImplementationTypeResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <!-- EndBaseService -->
    <wsdl:operation name="getSupportedTag">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">The set of version tags known to the
      service. All services must recognize the "CURRENT" tag, although interpretation is service
      specific.</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getSupportedTag">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getSupportedTagResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="existsURI">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Determine whether a concept domain
      binding with the supplied DocumentURI existsDetermine whether a concept domain binding with
      the supplied DocumentURI exists</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="existsURI">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="existsURIResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="exists">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Determine whether a concept domain
      binding exists for the specified domain, value set, realm and context. Note that only the
      &lt;i&gt;conceptDomain&lt;/i&gt; name and/or &lt;i&gt;valueSet&lt;/i&gt; names must be
      validated. A service implementation may choose whether to validate the URI's or simply assume
      that, if not found in the service, they reference external elements.</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="exists">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="existsResponse">
        <soap:body use="literal" />
      </wsdl:output>

      <fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnknownConceptDomain">
        <documentation>The named &lt;i&gt;conceptDomain&lt;/i&gt; is not recognized by the
        service</documentation>

        <fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnknownConceptDomain" />
      </fault>

      <fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnsupportedContext">
        <documentation>One or more &lt;i&gt;changeSetContext&lt;/i&gt; is not supported by the
        service</documentation>

        <fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnsupportedContext" />
      </fault>

      <fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnsupportedBindingQualifier">
        <documentation>The &lt;i&gt;bindingQualifier&lt;/i&gt; is not recognized by the
        system.</documentation>

        <fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnsupportedBindingQualifier" />
      </fault>

      <fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnknownValueSet">
        <documentation>The value set name or URI is not recognized by the service</documentation>

        <fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnknownValueSet" />
      </fault>

    </wsdl:operation>

    <wsdl:operation name="readByURI">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Return the concept domain binding
      with the supplied DocumentURI.Return the concept domain binding with the supplied
      DocumentURI.</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="readByURI">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="readByURIResponse">
        <soap:body use="literal" />
      </wsdl:output>

      <fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnknownConceptDomainBinding">
        <documentation>The &lt;i&gt;conceptDomainBinding&lt;/i&gt; URI is not recognized by the
        service</documentation>

        <fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnknownConceptDomainBinding" />
      </fault>

    </wsdl:operation>

    <wsdl:operation name="read">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Return the concept binding for the
      specified domain, value set, realm and context. Note that only the
      &lt;i&gt;conceptDomain&lt;/i&gt; name and/or &lt;i&gt;valueSet&lt;/i&gt; names must be
      validated. A service implementation may choose whether to validate the URI's or simply assume
      that, if not found in the service, they reference external elements.</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="read">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="readResponse">
        <soap:body use="literal" />
      </wsdl:output>

      <fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnknownConceptDomainBinding">
        <documentation>The &lt;i&gt;conceptDomainBinding&lt;/i&gt; URI is not recognized by the
        service</documentation>

        <fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnknownConceptDomainBinding" />
      </fault>

      <fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnknownConceptDomain">
        <documentation>The named &lt;i&gt;conceptDomain&lt;/i&gt; is not recognized by the
        service</documentation>

        <fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnknownConceptDomain" />
      </fault>

      <fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnsupportedContext">
        <documentation>One or more &lt;i&gt;changeSetContext&lt;/i&gt; is not supported by the
        service</documentation>

        <fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnsupportedContext" />
      </fault>

      <fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnsupportedBindingQualifier">
        <documentation>The &lt;i&gt;bindingQualifier&lt;/i&gt; is not recognized by the
        system.</documentation>

        <fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnsupportedBindingQualifier" />
      </fault>

      <fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnknownValueSet">
        <documentation>The value set name or URI is not recognized by the service</documentation>

        <fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnknownValueSet" />
      </fault>

    </wsdl:operation>

  </wsdl:binding>

  <wsdl:service name="ConceptDomainBindingReadService">
    <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">A service that provides direct read
    access to bindings that are asserted between concept domains and value sets.</documentation>

    <wsdl:port name="ConceptDomainBindingReadServicePort"
    binding="tns:ConceptDomainBindingReadServiceSoapBinding">
      <soap:address location="http://localhost:9090/ConceptDomainBindingReadServicePort" />
    </wsdl:port>

  </wsdl:service>

</wsdl:definitions>
