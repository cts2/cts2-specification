<?xml version="1.0"?>
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
xmlns:tns="http://www.omg.org/spec/CTS2/1.1/wsdl/MapCatalogReadServices"
xmlns:baseReadService="http://www.omg.org/spec/CTS2/1.1/wsdl/BaseReadServices"
xmlns:baseServiceTypes="http://www.omg.org/spec/CTS2/1.1/wsdl/BaseServiceTypes"
xmlns:exceptions="http://www.omg.org/spec/CTS2/1.1/Exceptions"
xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
name="MapCatalogReadService"
targetNamespace="http://www.omg.org/spec/CTS2/1.1/wsdl/MapCatalogReadServices">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://www.omg.org/spec/CTS2/1.1/wsdl/MapCatalogReadServices"
      schemaLocation="MapCatalogReadServiceTypes.xsd" />
      <xsd:import namespace="http://www.omg.org/spec/CTS2/1.1/Exceptions" schemaLocation="../core/Exceptions.xsd" />
    </xsd:schema>

  </wsdl:types>

  <!-- BaseService Messages -->
  <wsdl:message name="getServiceDescription">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceDescription" />
  </wsdl:message>

  <wsdl:message name="getSupportedFormatResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getSupportedFormatResponse" />
  </wsdl:message>

  <wsdl:message name="getServiceProvider">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceProvider" />
  </wsdl:message>

  <wsdl:message name="getServiceNameResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceNameResponse" />
  </wsdl:message>

  <wsdl:message name="getServiceProviderResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceProviderResponse" />
  </wsdl:message>

  <wsdl:message name="getServiceVersion">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceVersion" />
  </wsdl:message>

  <wsdl:message name="getServiceVersionResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceVersionResponse" />
  </wsdl:message>

  <wsdl:message name="getDefaultFormatResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getDefaultFormatResponse" />
  </wsdl:message>

  <wsdl:message name="getImplementationTypeResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getImplementationTypeResponse" />
  </wsdl:message>

  <wsdl:message name="getSupportedProfileResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getSupportedProfileResponse" />
  </wsdl:message>

  <wsdl:message name="getServiceDescriptionResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceDescriptionResponse" />
  </wsdl:message>

  <wsdl:message name="getImplementationType">
    <wsdl:part name="parameters" element="baseServiceTypes:getImplementationType" />
  </wsdl:message>

  <wsdl:message name="getServiceName">
    <wsdl:part name="parameters" element="baseServiceTypes:getServiceName" />
  </wsdl:message>

  <wsdl:message name="getDefaultFormat">
    <wsdl:part name="parameters" element="baseServiceTypes:getDefaultFormat" />
  </wsdl:message>

  <wsdl:message name="getKnownNamespace">
    <wsdl:part name="parameters" element="baseServiceTypes:getKnownNamespace" />
  </wsdl:message>

  <wsdl:message name="getKnownNamespaceResponse">
    <wsdl:part name="parameters" element="baseServiceTypes:getKnownNamespaceResponse" />
  </wsdl:message>

  <wsdl:message name="getSupportedFormat">
    <wsdl:part name="parameters" element="baseServiceTypes:getSupportedFormat" />
  </wsdl:message>

  <wsdl:message name="getSupportedProfile">
    <wsdl:part name="parameters" element="baseServiceTypes:getSupportedProfile" />
  </wsdl:message>

  <!-- End BaseService Messages -->
  <wsdl:message name="read">
    <wsdl:part name="parameters" element="tns:read" />
  </wsdl:message>

  <wsdl:message name="exists">
    <wsdl:part name="parameters" element="tns:exists" />
  </wsdl:message>

  <wsdl:message name="readResponse">
    <wsdl:part name="parameters" element="tns:readResponse" />
  </wsdl:message>

  <wsdl:message name="existsResponse">
    <wsdl:part name="parameters" element="tns:existsResponse" />
  </wsdl:message>

  <wsdl:message name="UnsupportedLanguage">
    <wsdl:part name="fault" element="exceptions:UnsupportedLanguage" />
  </wsdl:message>
  
  <wsdl:message name="UnknownChangeSet">
    <wsdl:part name="fault" element="exceptions:UnknownChangeSet" />
  </wsdl:message>
  
  <wsdl:message name="ChangeSetIsNotOpen">
    <wsdl:part name="fault" element="exceptions:ChangeSetIsNotOpen" />
  </wsdl:message>
  
  <wsdl:message name="UnsupportedContext">
    <wsdl:part name="fault" element="exceptions:UnsupportedContext" />
  </wsdl:message>
  
  <wsdl:message name="UnsupportedMatchAlgorithm">
    <wsdl:part name="fault" element="exceptions:UnsupportedMatchAlgorithm" />
  </wsdl:message>
  
  <wsdl:message name="UnsupportedPredicate">
    <wsdl:part name="fault" element="exceptions:UnsupportedPredicate" />
  </wsdl:message>
  
  <wsdl:message name="UnsupportedNamespaceName">
    <wsdl:part name="fault" element="exceptions:UnsupportedNamespaceName" />
  </wsdl:message>
  
  <wsdl:message name="UnsupportedModelAttribute">
    <wsdl:part name="fault" element="exceptions:UnsupportedModelAttribute" />
  </wsdl:message>
  
  <wsdl:message name="MatchValueFormatException">
    <wsdl:part name="fault" element="exceptions:MatchValueFormatException" />
  </wsdl:message>
  
  <wsdl:message name="UnsupportedFormat">
    <wsdl:part name="fault" element="exceptions:UnsupportedFormat" />
  </wsdl:message>
  
  <wsdl:message name="QueryTimeout">
    <wsdl:part name="fault" element="exceptions:QueryTimeout" />
  </wsdl:message>

  <wsdl:message name="UnknownMap">
    <wsdl:part name="fault" element="exceptions:UnknownMap" />
  </wsdl:message>

  <wsdl:portType name="MapCatalogReadServicePortType">
    <!-- BaseService -->
    <wsdl:operation name="getSupportedFormat">
      <wsdl:input name="getSupportedFormat" message="tns:getSupportedFormat" />
      <wsdl:output name="getSupportedFormatResponse" message="tns:getSupportedFormatResponse" />
    </wsdl:operation>

    <wsdl:operation name="getServiceVersion">
      <wsdl:input name="getServiceVersion" message="tns:getServiceVersion" />
      <wsdl:output name="getServiceVersionResponse" message="tns:getServiceVersionResponse" />
    </wsdl:operation>

    <wsdl:operation name="getDefaultFormat">
      <wsdl:input name="getDefaultFormat" message="tns:getDefaultFormat" />
      <wsdl:output name="getDefaultFormatResponse" message="tns:getDefaultFormatResponse" />
    </wsdl:operation>

    <wsdl:operation name="getKnownNamespace">
      <wsdl:input name="getKnownNamespace" message="tns:getKnownNamespace" />
      <wsdl:output name="getKnownNamespaceResponse" message="tns:getKnownNamespaceResponse" />
    </wsdl:operation>

    <wsdl:operation name="getSupportedProfile">
      <wsdl:input name="getSupportedProfile" message="tns:getSupportedProfile" />
      <wsdl:output name="getSupportedProfileResponse" message="tns:getSupportedProfileResponse" />
    </wsdl:operation>

    <wsdl:operation name="getServiceProvider">
      <wsdl:input name="getServiceProvider" message="tns:getServiceProvider" />
      <wsdl:output name="getServiceProviderResponse" message="tns:getServiceProviderResponse" />
    </wsdl:operation>

    <wsdl:operation name="getServiceName">
      <wsdl:input name="getServiceName" message="tns:getServiceName" />
      <wsdl:output name="getServiceNameResponse" message="tns:getServiceNameResponse" />
    </wsdl:operation>

    <wsdl:operation name="getServiceDescription">
      <wsdl:input name="getServiceDescription" message="tns:getServiceDescription" />
      <wsdl:output name="getServiceDescriptionResponse"
      message="tns:getServiceDescriptionResponse" />
    </wsdl:operation>

    <wsdl:operation name="getImplementationType">
      <wsdl:input name="getImplementationType" message="tns:getImplementationType" />
      <wsdl:output name="getImplementationTypeResponse"
      message="tns:getImplementationTypeResponse" />
    </wsdl:operation>

    <!-- End BaseService -->
    <wsdl:operation name="read">
      <wsdl:input name="read" message="tns:read" />
      <wsdl:output name="readResponse" message="tns:readResponse" />
      <wsdl:fault name="UnknownMap" message="tns:UnknownMap"/>
      <wsdl:fault name="UnsupportedLanguage" message="tns:UnsupportedLanguage"/>
      <wsdl:fault name="UnknownChangeSet" message="tns:UnknownChangeSet"/>
      <wsdl:fault name="ChangeSetIsNotOpen" message="tns:ChangeSetIsNotOpen"/>
      <wsdl:fault name="UnsupportedContext" message="tns:UnsupportedContext"/>
      <wsdl:fault name="UnsupportedMatchAlgorithm" message="tns:UnsupportedMatchAlgorithm"/>
      <wsdl:fault name="UnsupportedPredicate" message="tns:UnsupportedPredicate"/>
      <wsdl:fault name="UnsupportedNamespaceName" message="tns:UnsupportedNamespaceName"/>
      <wsdl:fault name="UnsupportedModelAttribute" message="tns:UnsupportedModelAttribute"/>
      <wsdl:fault name="MatchValueFormatException" message="tns:MatchValueFormatException"/>
      <wsdl:fault name="UnsupportedFormat" message="tns:UnsupportedFormat"/>
      <wsdl:fault name="QueryTimeout" message="tns:QueryTimeout"/>
    </wsdl:operation>

    <wsdl:operation name="exists">
      <wsdl:input name="exists" message="tns:exists" />
      <wsdl:output name="existsResponse" message="tns:existsResponse" />
      <wsdl:fault name="UnsupportedLanguage" message="tns:UnsupportedLanguage"/>
      <wsdl:fault name="UnknownChangeSet" message="tns:UnknownChangeSet"/>
      <wsdl:fault name="ChangeSetIsNotOpen" message="tns:ChangeSetIsNotOpen"/>
      <wsdl:fault name="UnsupportedContext" message="tns:UnsupportedContext"/>
    </wsdl:operation>

  </wsdl:portType>

  <wsdl:binding name="MapCatalogReadServiceSoapBinding" type="tns:MapCatalogReadServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />
    <!-- BaseService -->
    <wsdl:operation name="getSupportedFormat">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">alist of the representation formats
      supported by the service. Example: text/html, text/xml, application/json</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getSupportedFormat">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getSupportedFormatResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getServiceVersion">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">the version or release identifier of
      the service</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getServiceVersion">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getServiceVersionResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getDefaultFormat">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">the default format used by the
      service unless otherwise specified</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getDefaultFormat">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getDefaultFormatResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getKnownNamespace">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">the set of namespaces recognized by
      this service. Because many namespace identifiers tend to be cryptic (i.e. HL7 OIDs, BioPortal
      URL's, etc.), &lt;i&gt;knownNamespace&lt;/i&gt; includes the namespace name, an optional URI
      \emph{and} a place to provide textual detail describing what the namespace references. Note
      that namespace names must be unique across an entire CTS2 implementation - the same
      namespace name cannot represent one namespace in code system A and a second in code system B.
      Note also that namespace names are \emph{local} to a service instance. Information that is
      communicated between service instances, recorded in data tables or client software
      \emph{must} use full URIs.</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getKnownNamespace">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getKnownNamespaceResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getServiceProvider">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">a reference to the individual or
      organization that provides the service.</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getServiceProvider">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getServiceProviderResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getSupportedProfile">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">the set of service profiles that are
      supported by this service implementation</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getSupportedProfile">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getSupportedProfileResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getServiceDescription">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">a description of the service, its
      use, etc.</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getServiceDescription">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getServiceDescriptionResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getServiceName">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">a short name that identifies the
      particular service and implementation</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getServiceName">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getServiceNameResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <wsdl:operation name="getImplementationType">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">the particular implementation type(s)
      supported by this profile</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="getImplementationType">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="getImplementationTypeResponse">
        <soap:body use="literal" />
      </wsdl:output>

    </wsdl:operation>

    <!-- EndBaseService -->
    <wsdl:operation name="read">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">
      Return the catalog entry by the supplied name, URI, OID or alternateID.</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="read">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="readResponse">
        <soap:body use="literal" />
      </wsdl:output>

      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnknownMap">
        <wsdl:documentation>The named &lt;i&gt;Map&lt;/i&gt; is not recognized by the
        service</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnknownMap" />
      </wsdl:fault>

      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnsupportedLanguage">
        <wsdl:documentation>The &lt;i&gt;referenceLanguage&lt;/i&gt; is not supported by the
          service</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnsupportedLanguage" />
      </wsdl:fault>
      
      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnknownChangeSet">
        <wsdl:documentation>The change set specified could either not be read or located by the
          service.</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnknownChangeSet" />
      </wsdl:fault>
      
      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="ChangeSetIsNotOpen">
        <wsdl:documentation>The &lt;i&gt;changeSetContext&lt;/i&gt; is recognized by the service, but
          its state is not &lt;i&gt;OPEN&lt;/i&gt;.</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="ChangeSetIsNotOpen" />
      </wsdl:fault>
      
      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnsupportedContext">
        <wsdl:documentation>One or more &lt;i&gt;changeSetContext&lt;/i&gt; is not supported by the
          service</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnsupportedContext" />
      </wsdl:fault>
      
      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnsupportedMatchAlgorithm">
        <wsdl:documentation>The &lt;i&gt;matchAlgorithm&lt;/i&gt; is not supported by the service.</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnsupportedMatchAlgorithm" />
      </wsdl:fault>
      
      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnsupportedPredicate">
        <wsdl:documentation>The predicate name or URI is not recognized by the service.</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnsupportedPredicate" />
      </wsdl:fault>
      
      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnsupportedNamespaceName">
        <wsdl:documentation>The supplied namespace name is not one that is known to the service.</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnsupportedNamespaceName" />
      </wsdl:fault>
      
      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnsupportedModelAttribute">
        <wsdl:documentation>The name or URI of a CTS2 model attribute is not recognized and/or supported by the
          service implementation.</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnsupportedModelAttribute" />
      </wsdl:fault>
      
      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="MatchValueFormatException">
        <wsdl:documentation>The match value does not meet the format or syntax required or the supplied match
          algorithm.</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="MatchValueFormatException" />
      </wsdl:fault>
      
      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnsupportedFormat">
        <wsdl:documentation>The &lt;i&gt;format&lt;/i&gt; is not supported by the service
          implementation</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnsupportedFormat" />
      </wsdl:fault>
      
      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="QueryTimeout">
        <wsdl:documentation>The &lt;i&gt;timeLimit&lt;/i&gt; was exceeded by the
          service.</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="QueryTimeout" />
      </wsdl:fault>

    </wsdl:operation>

    <wsdl:operation name="exists">
      <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">Determine whether a
      &lt;i&gt;MapCatalogEntry&lt;/i&gt; exists for the supplied name, URI, OID or alternateID.</documentation>

      <soap:operation soapAction="" style="document" />
      <wsdl:input name="exists">
        <soap:body use="literal" />
      </wsdl:input>

      <wsdl:output name="existsResponse">
        <soap:body use="literal" />
      </wsdl:output>

      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnsupportedLanguage">
        <wsdl:documentation>The &lt;i&gt;referenceLanguage&lt;/i&gt; is not supported by the
          service</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnsupportedLanguage" />
      </wsdl:fault>
      
      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnknownChangeSet">
        <wsdl:documentation>The change set specified could either not be read or located by the
          service.</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnknownChangeSet" />
      </wsdl:fault>
      
      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="ChangeSetIsNotOpen">
        <wsdl:documentation>The &lt;i&gt;changeSetContext&lt;/i&gt; is recognized by the service, but
          its state is not &lt;i&gt;OPEN&lt;/i&gt;.</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="ChangeSetIsNotOpen" />
      </wsdl:fault>
      
      <wsdl:fault xmlns="http://schemas.xmlsoap.org/wsdl/" name="UnsupportedContext">
        <wsdl:documentation>One or more &lt;i&gt;changeSetContext&lt;/i&gt; is not supported by the
          service</wsdl:documentation>
        <soap:fault xmlns="http://schemas.xmlsoap.org/wsdl/soap/" name="UnsupportedContext" />
      </wsdl:fault>

    </wsdl:operation>

  </wsdl:binding>

  <wsdl:service name="MapCatalogReadService">
    <documentation xmlns="http://schemas.xmlsoap.org/wsdl/">A service that provides direct read
    access to &lt;i&gt;MapCatalogEntries.&lt;/i&gt;</documentation>

    <wsdl:port name="MapCatalogReadServicePort" binding="tns:MapCatalogReadServiceSoapBinding">
      <soap:address location="http://localhost:9090/MapCatalogReadServicePort" />
    </wsdl:port>

  </wsdl:service>

</wsdl:definitions>
